{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 5ef4ded41fdf2a5f1b9d","webpack:///./xolor.js","webpack:///./~/proto/proto.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,wC;;;;;;;;;;ACtCA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAuB;AACvB,wBAAuB;;AAEvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAa;;AAEb;AACA;;AAEA;AACA;AACA;AACA;;AAEA,UAAS,OAAO;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,wBAAuB,cAAc;AACrC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA,+BAA8B,SAAS;AACvC;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,cAAa;AACb;AACA,6BAA4B,SAAS;AACrC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,UAAS;AACT;;AAEA;;AAEA;AACA;AACA,cAAa;AACb;AACA;AACA;;AAEA,2CAA0C,EAAE,WAAW,EAAE,WAAW,EAAE,mBAAmB;AACzF;AACA;AACA;AACA;;AAEA,kBAAiB,sEAAsE;AACvF;AACA;AACA;AACA;;AAEA,kBAAiB,+BAA+B,IAAI,MAAM,IAAI,MAAM,IAAI,kCAAkC;AAC1G;AACA;AACA;AACA;;AAEA,kBAAiB,kGAAkG;AACnH;AACA;AACA;AACA;;AAEA,kBAAiB,qCAAqC,IAAI,MAAM,IAAI,MAAM,IAAI,kCAAkC;AAChH;AACA;AACA;AACA,sBAAqB;AACrB;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,kBAAiB,wBAAwB,IAAI,MAAM,IAAI,MAAM,IAAI,gCAAgC;AACjG;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,kBAAiB;AACjB;AACA,kBAAiB;AACjB;AACA,kBAAiB;AACjB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,cAAa;AACb;AACA,cAAa;AACb;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA,kBAAiB;AACjB;AACA,kBAAiB;AACjB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,cAAa;AACb;AACA;;AAEA;AACA;AACA,cAAa;AACb;AACA,cAAa;AACb;AACA,cAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,2BAA0B,iBAAiB;AAC3C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;;AAEA,kD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;;AAEA;AACA,uBAAsB,YAAY;AAClC;;AAEA;AACA,wBAAuB,2BAA2B;AAClD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA,yEAAwE,UAAU;AAClF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAC;;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA,YAAW,iBAAiB;AAC5B,YAAW,iBAAiB;AAC5B;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,E;;;;;;;;;ACr9BA;AACA;;AAEA;;AAEA,mGAAkG,iBAAiB;AACnH;AACA;;AAEA;AACA,uBAAsB;AACtB;;AAEA,MAAK,OAAO;AACZ;AACA;AACA;;AAEA;AACA,yBAAwB;AACxB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,wDAAuD;AACvD;AACA,eAAc;AACd;AACA,MAAK;AACL;AACA;AACA,wDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAc;AACd;AACA;;AAEA,gDAA+C;;AAE/C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,wCAAuC;AACvC;;AAEA;AACA;;AAEA,2BAA0B;;AAE1B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,oEAAmE;AACnE;AACA;AACA,kBAAiB;AACjB;AACA,cAAa;AACb,UAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA,E","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"xolor\"] = factory();\n\telse\n\t\troot[\"xolor\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 5ef4ded41fdf2a5f1b9d\n **/","var proto = require(\"proto\")\r\n\r\nvar xolor = module.exports = proto(function() {\r\n    // static methods\r\n\r\n    this.random = function() {\r\n        return new xolor([\r\n            255 * Math.random(),\r\n            255 * Math.random(),\r\n            255 * Math.random()\r\n        ])\r\n    }\r\n\r\n    this.readable = function() {\r\n        if(arguments.length === 1) {\r\n            var domNode = arguments[0]\r\n            var f = \"\"; // font color\r\n            var b = \"\"; // background color\r\n\r\n            do {\r\n                if(\"\" === f) {\r\n                    f = window.getComputedStyle(domNode).getPropertyValue(\"color\")\r\n                    if(f === \"transparent\" || f === \"rgba(0, 0, 0, 0)\") {\r\n                        f = \"\"\r\n                    }\r\n                }\r\n                if (\"\" === b) {\r\n                    b = window.getComputedStyle(domNode).getPropertyValue(\"backgroundColor\")\r\n                    if(b === \"transparent\" || b === \"rgba(0, 0, 0, 0)\") {\r\n                        b = \"\"\r\n                    }\r\n                }\r\n\r\n                domNode = domNode[\"parentNode\"]\r\n            } while ((\"\" === f || \"\" === b) && domNode.nodeName.toUpperCase() !== 'BODY')\r\n\r\n            if (\"\" === f) f = \"black\"\r\n            if (\"\" === b) b = \"white\"\r\n\r\n            // todo: if alpha != 1, use opacity() to calculate correct color on certain element and it's parent\r\n            var background = b\r\n            var textColor = f\r\n            var textSize = window.getComputedStyle(arguments[0]).getPropertyValue(\"fontSize\")\r\n\r\n        } else { // arguments.length === 3\r\n            var background = arguments[0]\r\n            var textColor = arguments[1]\r\n            var textSize = arguments[2]\r\n        }\r\n\r\n        var a = new xolor(textColor)\r\n        var b = new xolor(background)\r\n        textSize = textSize || 10\r\n\r\n        // based on: http://www.hgrebdes.com/colour/spectrum/colourvisibility.html\r\n        var diff = b.r * 0.299 + b.g * 0.587 + b.b * 0.114 -\r\n                   a.r * 0.299 - a.g * 0.587 - a.b * 0.114\r\n\r\n        return !((diff < (1.5 + 141.162 * Math.pow(0.975, textSize)))\r\n              && (diff > (-.5 - 154.709 * Math.pow(0.990, textSize))))\r\n    }\r\n\r\n    var colorizeModifiers = {\r\n        // Returns number in [0, 1] (0 = FROM, 1 = TO)\r\n        gradient: function (k, l, diff, c) {\r\n            return k / l;\r\n        },\r\n        flip: function (k, l, diff, c) {\r\n            return (\" \" === c) ? diff : !diff;\r\n        },\r\n        pillow: function (k, l, diff, c) {\r\n            k*= 2;\r\n            return (k <= l)\r\n                ?\t(k / l)\r\n                :\t(2 - k / l);\r\n        }\r\n    }\r\n\r\n    this.colorize = function(domNode, FROM, TO, method) {\r\n        if (\"function\" !== typeof method) {\r\n            method = colorizeModifiers[method]\r\n        }\r\n\r\n        FROM = new xolor(FROM)\r\n        TO   = new xolor(TO)\r\n\r\n        var characterLength = 0, charactersProcessed = 0, position = 0\r\n\r\n        // get the full text length of the domNode\r\n        var tmp  = domNode.childNodes\r\n        for (var i = 0; i<tmp.length; i++){\r\n            characterLength+= tmp[i][\"textContent\"].length\r\n        }\r\n\r\n        var replace = function(node) {\r\n            if (3 === node.nodeType) {\r\n                var rDiff = TO.r - FROM.r\r\n                var gDiff = TO.g - FROM.g\r\n                var bDiff = TO.b - FROM.b\r\n                var aDiff = TO.a - FROM.a\r\n\r\n\r\n                var ctx = document.createElement('span'), len = node.nodeValue.length\r\n                for(var i = 0; i < len; i++) {\r\n                    var elem = document.createElement('span')\r\n                    var c    = node.nodeValue.charAt(i)\r\n\r\n                    position = method(charactersProcessed, characterLength, position, c);\r\n\r\n                    elem.style.color =_RGBAtoCSS(\r\n                        FROM.r + position * rDiff|0,\r\n                        FROM.g + position * gDiff|0,\r\n                        FROM.b + position * bDiff|0,\r\n                        FROM.a + position * aDiff\r\n                    );\r\n\r\n                    elem.appendChild(document.createTextNode(c))\r\n                    ctx.appendChild(elem)\r\n                    charactersProcessed++\r\n                }\r\n\r\n                node.parentNode.replaceChild(ctx, node)\r\n\r\n            } else {\r\n                var len = node.childNodes.length\r\n                for(var n=0; n < len; n++) {\r\n                    replace(node.childNodes[n])\r\n                }\r\n            }\r\n        }\r\n\r\n        replace(domNode)\r\n    }\r\n\r\n\tthis.init = function(color) {\r\n        if(color instanceof xolor) {\r\n            return xolor({\r\n                r: color.r,\r\n                g: color.g,\r\n                b: color.b\r\n            })\r\n        } else if (\"string\" === typeof color) {\r\n            color = color.toLowerCase().replace(/[^a-z0-9,.()#%]/g, '');\r\n\r\n            var part, c;\r\n\r\n            if ('transparent' === color) {\r\n                this.a = this.r = this.g = this.b = 0;\r\n            } else {\r\n                if (color in colorNames) {\r\n                    color = '#' + colorNames[color]\r\n                }\r\n\r\n                if ((part = /^#?([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})$/.exec(color))) {  // #ff9000, #ff0000\r\n                    this.a = 1;\r\n                    this.r = parseInt(part[1], 16);\r\n                    this.g = parseInt(part[2], 16);\r\n                    this.b = parseInt(part[3], 16);\r\n\r\n                } else if ((part = /^#?([0-9a-f])([0-9a-f])([0-9a-f])$/.exec(color))) {   // #f00, fff\r\n                    this.a = 1;\r\n                    this.r = parseInt(part[1] + part[1], 16);\r\n                    this.g = parseInt(part[2] + part[2], 16);\r\n                    this.b = parseInt(part[3] + part[3], 16);\r\n\r\n                } else if ((part = /^rgba?\\((\\d{1,3}),(\\d{1,3}),(\\d{1,3})(,([0-9.]+))?\\)$/.exec(color))) {  // rgb(1, 234, 56)\r\n                    this.a = _normalize(part[5], 1);\r\n                    this.r = _normalize(part[1]);\r\n                    this.g = _normalize(part[2]);\r\n                    this.b = _normalize(part[3]);\r\n\r\n                } else if ((part = /^rgba?\\(([0-9.]+\\%),([0-9.]+\\%),([0-9.]+\\%)(,([0-9.]+)\\%?)?\\)$/.exec(color))) {  // rgb(66%, 55%, 44%) in [0,100]%, [0,100]%, [0,100]%\r\n                    this.a = _normalize(part[5], 1);\r\n                    this.r = Math.round(2.55 * _normalize(part[1], 100));\r\n                    this.g = Math.round(2.55 * _normalize(part[2], 100));\r\n                    this.b = Math.round(2.55 * _normalize(part[3], 100));\r\n\r\n                } else if ((part = /^hs([bvl])a?\\((\\d{1,3}),(\\d{1,3}),(\\d{1,3})(,([0-9.]+))?\\)$/.exec(color))) { // hsv(64, 40, 16) in [0, 360], [0,100], [0,100] or hsl(10, 90, 20)\r\n                    var func;\r\n                    if (\"l\" === part[1]) {\r\n                        func = _hsl;\r\n                    } else {\r\n                        func = _hsv;\r\n                    }\r\n\r\n                    c = func(parseInt(part[2], 10), parseInt(part[3], 10), parseInt(part[4], 10));\r\n\r\n                    this.a = _normalize(part[6], 1);\r\n                    this.r = c[0];\r\n                    this.g = c[1];\r\n                    this.b = c[2];\r\n\r\n                } else if ((part = /^(\\d{1,3}),(\\d{1,3}),(\\d{1,3})(,([0-9.]+))?$/.exec(color))) {  // 1, 234, 56\r\n                    this.a = _normalize(part[5], 1);\r\n                    this.r = _normalize(part[1]);\r\n                    this.g = _normalize(part[2]);\r\n                    this.b = _normalize(part[3]);\r\n                }\r\n            }\r\n        } else if(\"number\" === typeof color) {\r\n            this.a =((color >> 24) & 0xff) / 255;\r\n            this.r = (color >> 16) & 0xff;\r\n            this.g = (color >>  8) & 0xff;\r\n            this.b = (color      ) & 0xff;\r\n        } else if(color instanceof Object) {\r\n            if (0 in color && 1 in color && 2 in color) {\r\n                this.a = _normalize(color[3], 1);\r\n                this.r = _normalize(color[0]);\r\n                this.g = _normalize(color[1]);\r\n                this.b = _normalize(color[2]);\r\n            } else if ('r' in color && 'g' in color && 'b' in color) {\r\n                this.a = _normalize(color.a, 1);\r\n                this.r = _normalize(color.r);\r\n                this.g = _normalize(color.g);\r\n                this.b = _normalize(color.b);\r\n            } else if ('h' in color && 's' in color) {\r\n                var rgb;\r\n                if ('l' in color) {\r\n                    rgb = _hsl(color[\"h\"], color[\"s\"], color[\"l\"]);\r\n                } else if ('v' in color) {\r\n                    rgb = _hsv(color[\"h\"], color[\"s\"], color[\"v\"]);\r\n                } else if ('b' in color) {\r\n                    rgb = _hsv(color[\"h\"], color[\"s\"], color.b);\r\n                } else {\r\n                    throw new Error(\"Invalid color object\")\r\n                }\r\n\r\n                this.a = _normalize(color.a, 1);\r\n                this.r = rgb[0];\r\n                this.g = rgb[1];\r\n                this.b = rgb[2];\r\n            }\r\n\t\t} else {\r\n            throw new Error('Invalid color')\r\n\t\t}\r\n\r\n        this.a = Math.round(this.a)\r\n        this.r = Math.round(this.r)\r\n        this.g = Math.round(this.g)\r\n        this.b = Math.round(this.b)\r\n\t}\r\n\r\n    // instance properties\r\n\r\n    Object.defineProperty(this, 'rbg', {\r\n        get: function() {\r\n            return {\r\n                r: this.r,\r\n                g: this.g,\r\n                b: this.b,\r\n                a: this.a\r\n            }\r\n        }\r\n    })\r\n\r\n    Object.defineProperty(this, 'css', {\r\n        get: function() {\r\n            if(0 === this.a) {\r\n                return \"transparent\"\r\n            } else if(1 === this.a) {\r\n                return 'rgb(' + this.r + ',' + this.g + ',' + this.b + ')'\r\n            } else {\r\n                return _RGBAtoCSS(this.r, this.g, this.b, this.a)\r\n            }\r\n        }\r\n    })\r\n\r\n    Object.defineProperty(this, 'array', {\r\n        get: function() {\r\n            return [this.r, this.g, this.b, 100 * this.a|0]\r\n        }\r\n    })\r\n\r\n    Object.defineProperty(this, 'fraction', {\r\n        get: function() {\r\n            return {\r\n                \"r\": this.r / 255,\r\n                \"g\": this.g / 255,\r\n                \"b\": this.b / 255,\r\n                \"a\": this.a\r\n            }\r\n        }\r\n    })\r\n\r\n    Object.defineProperty(this, 'hsl', {\r\n        get: function() {\r\n            // inspiration: http://130.113.54.154/~monger/hsl-rgb.html\r\n\r\n            var r = this.r / 255;\r\n            var g = this.g / 255;\r\n            var b = this.b / 255;\r\n\r\n            var min = Math.min(r, g, b);\r\n            var max = Math.max(r, g, b);\r\n            var delta = max - min;\r\n\r\n            var h, s, l = (max + min) / 2;\r\n\r\n            if (0 === delta) {\r\n                h = 0;\r\n                s = 0;\r\n            } else {\r\n\r\n                if (r === max) {\r\n                    h = (g - b) / delta;\r\n                } else if (g === max) {\r\n                    h = 2 + (b - r) / delta;\r\n                } else {\r\n                    h = 4 + (r - g) / delta;\r\n                }\r\n\r\n                s = delta / (l < .5 ? max + min : 2 - max - min);\r\n            }\r\n            return {\r\n                \"h\": Math.round( 60 * ((6 + h) % 6)),\r\n                \"s\": Math.round(100 * s),\r\n                \"l\": Math.round(100 * l),\r\n                \"a\": this.a\r\n            }\r\n        }\r\n    })\r\n\r\n    Object.defineProperty(this, 'hsv', {\r\n        get: function() {\r\n            var r = this.r / 255;\r\n            var g = this.g / 255;\r\n            var b = this.b / 255;\r\n\r\n            /*\r\n            if (r > g) {\r\n                max = r;\r\n                min = g;\r\n            } else {\r\n                min = r;\r\n                max = g;\r\n            }\r\n\r\n            if (b > max)\r\n                max = b;\r\n            if (b < min)\r\n                min = b;\r\n            */\r\n\r\n            var min = Math.min(r, g, b);\r\n            var max = Math.max(r, g, b);\r\n            var delta = max - min;\r\n\r\n            var h, s, v = max;\r\n\r\n            if (0 === max) {\r\n                s = 0;\r\n            } else {\r\n                s = delta / max;\r\n            }\r\n\r\n            if (0 === delta) {\r\n                h = 0;\r\n            } else if (r === max) {\r\n                h = (g - b) / delta;\r\n            } else if (g === max) {\r\n                h = 2 + (b - r) / delta;\r\n            } else {\r\n                h = 4 + (r - g) / delta;\r\n            }\r\n\r\n            return {\r\n                \"h\": Math.round( 60 * ((6 + h) % 6)),\r\n                \"s\": Math.round(100 * s),\r\n                \"v\": Math.round(100 * v),\r\n                \"a\": this.a\r\n            }\r\n        }\r\n    })\r\n\r\n    this.toString = function () {\r\n        var chars = \"0123456789abcdef\"\r\n\r\n        var r1 = this.r >> 4;\r\n        var g1 = this.g >> 4;\r\n        var b1 = this.b >> 4;\r\n\r\n        var r2 = this.r & 0xf;\r\n        var g2 = this.g & 0xf;\r\n        var b2 = this.b & 0xf;\r\n\r\n        return '#'\r\n            + chars.charAt(r1) + chars.charAt(r2)\r\n            + chars.charAt(g1) + chars.charAt(g2)\r\n            + chars.charAt(b1) + chars.charAt(b2)\r\n    }\r\n    Object.defineProperty(this, 'hex', {\r\n        get: this.toString\r\n    })\r\n\r\n    // get color as a normalize integer\r\n    Object.defineProperty(this, 'int', {\r\n        get: function() {\r\n            return ((100 * this.a|0) << 24 ^ this.r << 16 ^ this.g << 8 ^ this.b)\r\n        }\r\n    })\r\n\r\n    // nearest name\r\n    Object.defineProperty(this, 'name', {\r\n        get: function() {\r\n            var lowest = null;\r\n            var lowest_ndx;\r\n\r\n            var table = colorNames;\r\n\r\n            var a = this.hsl\r\n\r\n            for (var i in table) {\r\n\r\n                /* We do not handle transparency */\r\n                var b = xolor(table[i]).hsl\r\n\r\n                var tmp = Math.sqrt(.5 * (a[\"h\"] - b[\"h\"]) * (a[\"h\"] - b[\"h\"]) + .5 * (a[\"s\"] - b[\"s\"]) * (a[\"s\"] - b[\"s\"]) + (a[\"l\"] - b[\"l\"]) * (a[\"l\"] - b[\"l\"]));\r\n\r\n                if (null === lowest || tmp < lowest) {\r\n                    lowest = tmp;\r\n                    lowest_ndx = i;\r\n                }\r\n            }\r\n            return lowest_ndx\r\n        }\r\n    })\r\n\r\n    // instance methods\r\n\r\n    // gets the lightness level (a value from 0 to 255) or returns a new xolor with the new lightness level\r\n        // if level is undefined, returns the lightness level\r\n        // otherwise will return a\r\n\tthis.lightness = function(level) {\r\n        if(level === undefined) {\r\n            return Math.max(this.g,this.r,this.b)\r\n        } else {\r\n            var roundedLevel = Math.round(level) // fractions won't work here\r\n            var levelChange = roundedLevel - this.lightness()\r\n\r\n            var r = Math.max(0,this.r+levelChange)\r\n            var g = Math.max(0,this.g+levelChange)\r\n            var b = Math.max(0,this.b+levelChange)\r\n\r\n            if(r > 0xff) r = 0xff\r\n            if(g > 0xff) g = 0xff\r\n            if(b > 0xff) b = 0xff\r\n\r\n            return xolor({r: r, g: g, b: b})\r\n        }\r\n\t}\r\n\r\n    // relative lightness\r\n    // returns a new xolor with the lightness level based on a ratio of the current lightness\r\n\t    // e.g. .5 darkens by 50% and 1.5 lightens by 50%\r\n    this.relLightness = function(ratio) {\r\n        return this.lightness(this.lightness()*ratio)\r\n    }\r\n\r\n\t// returns a lighter (or darker) color\r\n\t// level should be a value from -255 to 255\r\n\tthis.lighter = function(amount) {\r\n        return this.lightness(this.lightness()+amount)\r\n\t}\r\n\r\n\r\n    // Microsoft's sepia function http://msdn.microsoft.com/en-us/magazine/cc163866.aspx\r\n    this.sepia = function() {\r\n        var r = this.r, g = this.g, b = this.b\r\n        return xolor({\r\n            r: Math.round(r * .393 + g * .769 + b * .189),\r\n            g: Math.round(r * .349 + g * .686 + b * .168),\r\n            b: Math.round(r * .272 + g * .534 + b * .131)\r\n        })\r\n    }\r\n\r\n\tthis.red = function() {\r\n        return xolor({\r\n            r: this.r,\r\n            g: 0, b:0\r\n        })\r\n\t}\r\n    this.green = function() {\r\n        return xolor({\r\n            g: this.g,\r\n            r: 0, b:0\r\n        })\r\n\t}\r\n    this.blue = function() {\r\n        return xolor({\r\n            b: this.b,\r\n            r: 0, g:0\r\n        })\r\n\t}\r\n\r\n    this.inverse = function() {\r\n        return xolor({\r\n            r: this.r ^= 0xff,\r\n            g: this.g ^= 0xff,\r\n            b: this.b ^= 0xff\r\n        })\r\n    }\r\n\r\n    this.opacity = function (topColor, opacity) {        \r\n        if(opacity > 1) {\r\n            opacity /= 100\r\n        }\r\n\r\n        var a = xolor(topColor) // above\r\n        var b = this     // below        \r\n        opacity = Math.max(opacity - 1 + b.a, 0)\r\n\r\n        return xolor({\r\n            r: Math.round((b.r - a.r) * opacity + a.r),\r\n            g: Math.round((b.g - a.g) * opacity + a.g),\r\n            b: Math.round((b.b - a.b) * opacity + a.b)\r\n        })\r\n    }\r\n\r\n    this.greyfilter = function (formula) {\r\n        if(formula === 1) {\r\n            var v = .35 + 13 * (this.r + this.g + this.b) / 60    // Robert Eisele's formula\r\n        } else if(formula === 2) {\r\n            var v = (13 * (this.r + this.g + this.b) + 5355) / 60 // Sun's formula: (1 - avg) / (100 / 35) + avg)\r\n        } else {\r\n            var v = this.r * .3 + this.g * .59 + this.b * .11\r\n        }\r\n\r\n        v = Math.min(v|0, 255)\r\n        return xolor({r:v,g:v,b:v})\r\n    }\r\n\r\n    this.web = function () {\r\n        var c = xolor({r:this.r,g:this.g,b:this.b})\r\n        if ((c.r+= 0x33 - c.r % 0x33) > 0xff) c.r = 0xff\r\n        if ((c.g+= 0x33 - c.g % 0x33) > 0xff) c.g = 0xff\r\n        if ((c.b+= 0x33 - c.b % 0x33) > 0xff) c.b = 0xff\r\n\r\n        return c\r\n    }\r\n\r\n    this.distance = function (from) {\r\n        var a = this, b = xolor(from)\r\n\r\n        // Approximation attempt of http://www.compuphase.com/cmetric.htm\r\n        return Math.sqrt(3 * (b.r - a.r) * (b.r - a.r) + 4 * (b.g - a.g) * (b.g - a.g) + 2 * (b.b - a.b) * (b.b - a.b))\r\n    }\r\n\r\n    //\r\n    this.combine = function(other) {\r\n        other = xolor(other)\r\n        return xolor({\r\n            r: this.r^= other.r,\r\n            g: this.g^= other.g,\r\n            b: this.b^= other.b\r\n        })\r\n    }\r\n\r\n    // Generates a new random number with parts of the current and the passed in color.\r\n    this.breed = function (other) {\r\n        var mask = 0, i = 6;\r\n        while (i--) {\r\n            if (Math.random() < .5) {\r\n                mask|= 0x0f << (i << 2);\r\n            }\r\n        }\r\n\r\n        var a = xolor(other), b = this\r\n        return xolor({\r\n            r: (a.r & ((mask >> 0x10) & 0xff)) | (b.r & (((mask >> 0x10) & 0xff) ^ 0xff)),\r\n            g: (a.g & ((mask >> 0x08) & 0xff)) | (b.g & (((mask >> 0x08) & 0xff) ^ 0xff)),\r\n            b: (a.b & ((mask >> 0x00) & 0xff)) | (b.b & (((mask >> 0x00) & 0xff) ^ 0xff))\r\n        })\r\n    }\r\n\r\n    this.add = function(b) {\r\n        b = xolor(b)\r\n\r\n        var r = this.r+b.r, g = this.g+b.g, b = this.b+b.b\r\n        if(r>0xff) r=0xff\r\n        if(g>0xff) g=0xff\r\n        if(b>0xff) b=0xff\r\n\r\n        return xolor({\r\n            r: r,\r\n            g: g,\r\n            b: b\r\n        })\r\n    }\r\n\r\n    this.subtractive = function(b) {\r\n        b = xolor(b)\r\n\r\n        var r = this.r+b.r-0xff,\r\n            g = this.g+b.g-0xff,\r\n            b = this.b+b.b-0xff\r\n\r\n        if(r<0) r=0\r\n        if(g<0) g=0\r\n        if(b<0) b=0\r\n\r\n        return xolor({\r\n            r: r,\r\n            g: g,\r\n            b: b\r\n        })\r\n    }\r\n\r\n    this.sub = this.subtract = function(b) {\r\n        b = xolor(b)\r\n\r\n        var r = this.r-b.r, g = this.g-b.g, b = this.b-b.b\r\n        if(r<0) r=0\r\n        if(g<0) g=0\r\n        if(b<0) b=0\r\n\r\n        return xolor({\r\n            r: r,\r\n            g: g,\r\n            b: b\r\n        })\r\n    }\r\n\r\n    this.mult = this.multiply = function(b) {\r\n        b = xolor(b)\r\n        return xolor({\r\n            r: (this.r / 255 * b.r)|0,\r\n            g: (this.g / 255 * b.g)|0,\r\n            b: (this.b / 255 * b.b)|0\r\n        })\r\n    }\r\n\r\n    this.avg = this.average = function (b) {\r\n        b = xolor(b)\r\n        return xolor({\r\n            r: (a.r + b.r) >> 1,\r\n            g: (a.g + b.g) >> 1,\r\n            b: (a.b + b.b) >> 1\r\n        })\r\n    }\r\n\r\n    this.triad = function () {\r\n        return [\r\n            this,\r\n            xolor([this.b, this.r, this.g]),\r\n            xolor([this.g, this.b, this.r])\r\n        ]\r\n    }\r\n\r\n    this.tetrad = function () {\r\n        return [\r\n            this,\r\n            xolor([this.b, this.r, this.b]),\r\n            xolor([this.b, this.g, this.r]),\r\n            xolor([this.r, this.b, this.r])\r\n        ]\r\n    }\r\n\r\n    // position should be a number from 0 to 1 (inclusive) describing how far from the calling color you want to calculate the color\r\n    this.gradient = function (to, level) {\r\n        if (level < 0 || 1 < level) throw new Error('`level` must a number between 0 and 1 (inclusive)')\r\n\r\n        var a = this, b = xolor(to)\r\n\r\n        var raisedLevel = level*1000\r\n        return xolor({\r\n            r: (a.r + ((b.r - a.r) / 1000) * raisedLevel)|0,\r\n            g: (a.g + ((b.g - a.g) / 1000) * raisedLevel)|0,\r\n            b: (a.b + ((b.b - a.b) / 1000) * raisedLevel)|0\r\n        })\r\n    }\r\n\r\n    this.analogous = function (number, slices) {\r\n        if(number === undefined) number = 8\r\n        if(slices === undefined) slices = 30\r\n\r\n        var hsv = this.hsv\r\n        var part = 360 / slices, ret = [this]\r\n        for (hsv[\"h\"] = ((hsv[\"h\"] - (part * number >> 1)) + 720) % 360; --number; ) {\r\n            hsv[\"h\"]+= part;\r\n            hsv[\"h\"]%= 360;\r\n            ret.push(xolor(hsv))\r\n        }\r\n        return ret\r\n    }\r\n\r\n    this.comp = this.complementary = function() {\r\n        var hsl = this.hsl\r\n        hsl[\"h\"] = (hsl[\"h\"] + 180) % 360\r\n        return xolor(hsl)\r\n    }\r\n\r\n    // split complement\r\n    this.splitcomp = this.splitcomplement = function () {\r\n        var hsv = this.hsv\r\n        var ret = [this]\r\n\r\n        hsv[\"h\"]+= 72;\r\n        hsv[\"h\"]%= 360;\r\n        ret.push(new xolor(hsv))\r\n\r\n        hsv[\"h\"]+= 144;\r\n        hsv[\"h\"]%= 360;\r\n        ret.push(new xolor(hsv))\r\n\r\n        return ret\r\n    }\r\n\r\n    this.monochromes = this.monochromatic = function (number) {\r\n        if(undefined === number) number = 6\r\n\r\n        var hsv = this.hsv\r\n        var ret = [this]\r\n        while (--number) {\r\n            hsv[\"v\"]+= 20;\r\n            hsv[\"v\"]%= 100;\r\n            ret.push(new xolor(hsv))\r\n        }\r\n\r\n        return ret\r\n    }\r\n})\r\n\r\n\r\n// http://www.w3.org/TR/css3-color/#svg-color\r\nvar colorNames = {\r\n    \"aliceblue\": \"f0f8ff\",\r\n    \"antiquewhite\": \"faebd7\",\r\n    \"aqua\": \"0ff\",\r\n    \"aquamarine\": \"7fffd4\",\r\n    \"azure\": \"f0ffff\",\r\n    \"beige\": \"f5f5dc\",\r\n    \"bisque\": \"ffe4c4\",\r\n    \"black\": \"000\",\r\n    \"blanchedalmond\": \"ffebcd\",\r\n    \"blue\": \"00f\",\r\n    \"blueviolet\": \"8a2be2\",\r\n    \"brown\": \"a52a2a\",\r\n    \"burlywood\": \"deb887\",\r\n    \"burntsienna\": \"ea7e5d\",\r\n    \"cadetblue\": \"5f9ea0\",\r\n    \"chartreuse\": \"7fff00\",\r\n    \"chocolate\": \"d2691e\",\r\n    \"coral\": \"ff7f50\",\r\n    \"cornflowerblue\": \"6495ed\",\r\n    \"cornsilk\": \"fff8dc\",\r\n    \"crimson\": \"dc143c\",\r\n    \"cyan\": \"0ff\",\r\n    \"darkblue\": \"00008b\",\r\n    \"darkcyan\": \"008b8b\",\r\n    \"darkgoldenrod\": \"b8860b\",\r\n    \"darkgray\": \"a9a9a9\",\r\n    \"darkgreen\": \"006400\",\r\n    \"darkgrey\": \"a9a9a9\",\r\n    \"darkkhaki\": \"bdb76b\",\r\n    \"darkmagenta\": \"8b008b\",\r\n    \"darkolivegreen\": \"556b2f\",\r\n    \"darkorange\": \"ff8c00\",\r\n    \"darkorchid\": \"9932cc\",\r\n    \"darkred\": \"8b0000\",\r\n    \"darksalmon\": \"e9967a\",\r\n    \"darkseagreen\": \"8fbc8f\",\r\n    \"darkslateblue\": \"483d8b\",\r\n    \"darkslategray\": \"2f4f4f\",\r\n    \"darkslategrey\": \"2f4f4f\",\r\n    \"darkturquoise\": \"00ced1\",\r\n    \"darkviolet\": \"9400d3\",\r\n    \"deeppink\": \"ff1493\",\r\n    \"deepskyblue\": \"00bfff\",\r\n    \"dimgray\": \"696969\",\r\n    \"dimgrey\": \"696969\",\r\n    \"dodgerblue\": \"1e90ff\",\r\n    \"firebrick\": \"b22222\",\r\n    \"floralwhite\": \"fffaf0\",\r\n    \"forestgreen\": \"228b22\",\r\n    \"fuchsia\": \"f0f\",\r\n    \"gainsboro\": \"dcdcdc\",\r\n    \"ghostwhite\": \"f8f8ff\",\r\n    \"gold\": \"ffd700\",\r\n    \"goldenrod\": \"daa520\",\r\n    \"gray\": \"808080\",\r\n    \"green\": \"008000\",\r\n    \"greenyellow\": \"adff2f\",\r\n    \"grey\": \"808080\",\r\n    \"honeydew\": \"f0fff0\",\r\n    \"hotpink\": \"ff69b4\",\r\n    \"indianred\": \"cd5c5c\",\r\n    \"indigo\": \"4b0082\",\r\n    \"ivory\": \"fffff0\",\r\n    \"khaki\": \"f0e68c\",\r\n    \"lavender\": \"e6e6fa\",\r\n    \"lavenderblush\": \"fff0f5\",\r\n    \"lawngreen\": \"7cfc00\",\r\n    \"lemonchiffon\": \"fffacd\",\r\n    \"lightblue\": \"add8e6\",\r\n    \"lightcoral\": \"f08080\",\r\n    \"lightcyan\": \"e0ffff\",\r\n    \"lightgoldenrodyellow\": \"fafad2\",\r\n    \"lightgray\": \"d3d3d3\",\r\n    \"lightgreen\": \"90ee90\",\r\n    \"lightgrey\": \"d3d3d3\",\r\n    \"lightpink\": \"ffb6c1\",\r\n    \"lightsalmon\": \"ffa07a\",\r\n    \"lightseagreen\": \"20b2aa\",\r\n    \"lightskyblue\": \"87cefa\",\r\n    \"lightslategray\": \"789\",\r\n    \"lightslategrey\": \"789\",\r\n    \"lightsteelblue\": \"b0c4de\",\r\n    \"lightyellow\": \"ffffe0\",\r\n    \"lime\": \"0f0\",\r\n    \"limegreen\": \"32cd32\",\r\n    \"linen\": \"faf0e6\",\r\n    \"magenta\": \"f0f\",\r\n    \"maroon\": \"800000\",\r\n    \"mediumaquamarine\": \"66cdaa\",\r\n    \"mediumblue\": \"0000cd\",\r\n    \"mediumorchid\": \"ba55d3\",\r\n    \"mediumpurple\": \"9370db\",\r\n    \"mediumseagreen\": \"3cb371\",\r\n    \"mediumslateblue\": \"7b68ee\",\r\n    \"mediumspringgreen\": \"00fa9a\",\r\n    \"mediumturquoise\": \"48d1cc\",\r\n    \"mediumvioletred\": \"c71585\",\r\n    \"midnightblue\": \"191970\",\r\n    \"mintcream\": \"f5fffa\",\r\n    \"mistyrose\": \"ffe4e1\",\r\n    \"moccasin\": \"ffe4b5\",\r\n    \"navajowhite\": \"ffdead\",\r\n    \"navy\": \"000080\",\r\n    \"oldlace\": \"fdf5e6\",\r\n    \"olive\": \"808000\",\r\n    \"olivedrab\": \"6b8e23\",\r\n    \"orange\": \"ffa500\",\r\n    \"orangered\": \"ff4500\",\r\n    \"orchid\": \"da70d6\",\r\n    \"palegoldenrod\": \"eee8aa\",\r\n    \"palegreen\": \"98fb98\",\r\n    \"paleturquoise\": \"afeeee\",\r\n    \"palevioletred\": \"db7093\",\r\n    \"papayawhip\": \"ffefd5\",\r\n    \"peachpuff\": \"ffdab9\",\r\n    \"peru\": \"cd853f\",\r\n    \"pink\": \"ffc0cb\",\r\n    \"plum\": \"dda0dd\",\r\n    \"powderblue\": \"b0e0e6\",\r\n    \"purple\": \"800080\",\r\n    \"red\": \"f00\",\r\n    \"rosybrown\": \"bc8f8f\",\r\n    \"royalblue\": \"4169e1\",\r\n    \"saddlebrown\": \"8b4513\",\r\n    \"salmon\": \"fa8072\",\r\n    \"sandybrown\": \"f4a460\",\r\n    \"seagreen\": \"2e8b57\",\r\n    \"seashell\": \"fff5ee\",\r\n    \"sienna\": \"a0522d\",\r\n    \"silver\": \"c0c0c0\",\r\n    \"skyblue\": \"87ceeb\",\r\n    \"slateblue\": \"6a5acd\",\r\n    \"slategray\": \"708090\",\r\n    \"slategrey\": \"708090\",\r\n    \"snow\": \"fffafa\",\r\n    \"springgreen\": \"00ff7f\",\r\n    \"steelblue\": \"4682b4\",\r\n    \"tan\": \"d2b48c\",\r\n    \"teal\": \"008080\",\r\n    \"thistle\": \"d8bfd8\",\r\n    \"tomato\": \"ff6347\",\r\n    \"turquoise\": \"40e0d0\",\r\n    \"violet\": \"ee82ee\",\r\n    \"wheat\": \"f5deb3\",\r\n    \"white\": \"fff\",\r\n    \"whitesmoke\": \"f5f5f5\",\r\n    \"yellow\": \"ff0\",\r\n    \"yellowgreen\": \"9acd32\"\r\n}\r\n\r\nfunction _RGBAtoCSS(r, g, b, a) {\r\n    return \"rgba(\" + r + \",\" + g + \",\" + b + \",\" + a + \")\"\r\n}\r\n\r\n\r\n/**\r\n * normalize function\r\n * @param {(number|string)=} n (optional)\r\n * @param {(number|string)=} s (optional)\r\n */\r\nfunction _normalize(n, s) {\r\n\r\n    var m;\r\n\r\n    if (undefined !== n) {\r\n        n = parseFloat(n);\r\n    }\r\n\r\n    if (undefined === s) {\r\n        s = 255;\r\n        m = 255;\r\n    } else if (1 === s) {\r\n\r\n        if (undefined === n || 1 === n) {\r\n            return 1;\r\n        }\r\n        s = 100;\r\n        m = 1;\r\n    } else {\r\n        m = s;\r\n    }\r\n\r\n    if (isNaN(n) || n <= 0) {\r\n        return 0;\r\n    }\r\n\r\n    if (s < n) {\r\n        return m;\r\n    }\r\n\r\n    if (n < 1 || 1 === s) {\r\n        if (1 === m) {\r\n            return n;\r\n        } else {\r\n            return (n * m) | 0;\r\n        }\r\n    }\r\n    return n * m / s;\r\n}\r\n\r\nfunction _hsl(h,s,l) {\r\n\r\n    h = _normalize(h, 360) / 360;\r\n    s = _normalize(s, 1);\r\n    l = _normalize(l, 1);\r\n\r\n    if (0 === s) {\r\n        l = Math.round(255 * l);\r\n        return [l, l, l];\r\n    }\r\n\r\n    function _hue(v1, v2, h) {\r\n        h = ++h % 1;\r\n\r\n        if (6 * h < 1) return v1 + (v2 - v1) * 6 * h;\r\n        if (2 * h < 1) return v2;\r\n        if (3 * h < 2) return v1 + (v2 - v1) * (4 - 6 * h);\r\n        return v1;\r\n    }\r\n\r\n    var v = l < .5 ? (l + l * s) : (l + s - l * s);\r\n    var m = l + l - v;\r\n\r\n    return [\r\n    Math.round(255 *_hue(m, v, h + 1 / 3)),\r\n    Math.round(255 *_hue(m, v, h)),\r\n    Math.round(255 *_hue(m, v, h - 1 / 3)) ];\r\n}\r\n\r\nfunction _hsv(h,s,v) {\r\n\r\n    h = _normalize(h, 360) / 60;\r\n    s = _normalize(s, 1);\r\n    v = _normalize(v, 1);\r\n\r\n    var hi = h|0;\r\n    var f = h - hi;\r\n\r\n    var p = Math.round(255 * v * (1 - s));\r\n    var q = Math.round(255 * v * (1 - s * f));\r\n    var t = Math.round(255 * v * (1 - s * (1 - f)));\r\n        v = Math.round(255 * v);\r\n\r\n    switch(hi) {\r\n    case 1:\r\n        return [q, v, p];\r\n    case 2:\r\n        return [p, v, t];\r\n    case 3:\r\n        return [p, q, v];\r\n    case 4:\r\n        return [t, p, v];\r\n    case 5:\r\n        return [v, p, q];\r\n    }\r\n    return [v, t, p];\r\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./xolor.js\n ** module id = 0\n ** module chunks = 0\n **/","\"use strict\";\r\n/* Copyright (c) 2013 Billy Tetrud - Free to use for any purpose: MIT License*/\r\n\r\nvar noop = function() {}\r\n\r\nvar prototypeName='prototype', undefined, protoUndefined='undefined', init='init', ownProperty=({}).hasOwnProperty; // minifiable variables\r\nfunction proto() {\r\n    var args = arguments // minifiable variables\r\n\r\n    if(args.length == 1) {\r\n        var parent = {init: noop}\r\n        var prototypeBuilder = args[0]\r\n\r\n    } else { // length == 2\r\n        var parent = args[0]\r\n        var prototypeBuilder = args[1]\r\n    }\r\n\r\n    // special handling for Error objects\r\n    var namePointer = {}    // name used only for Error Objects\r\n    if([Error, EvalError, RangeError, ReferenceError, SyntaxError, TypeError, URIError].indexOf(parent) !== -1) {\r\n        parent = normalizeErrorObject(parent, namePointer)\r\n    }\r\n\r\n    // set up the parent into the prototype chain if a parent is passed\r\n    var parentIsFunction = typeof(parent) === \"function\"\r\n    if(parentIsFunction) {\r\n        prototypeBuilder[prototypeName] = parent[prototypeName]\r\n    } else {\r\n        prototypeBuilder[prototypeName] = parent\r\n    }\r\n\r\n    // the prototype that will be used to make instances\r\n    var prototype = new prototypeBuilder(parent)\r\n    namePointer.name = prototype.name\r\n\r\n    // if there's no init, assume its inheriting a non-proto class, so default to applying the superclass's constructor.\r\n    if(!prototype[init] && parentIsFunction) {\r\n        prototype[init] = function() {\r\n            parent.apply(this, arguments)\r\n        }\r\n    }\r\n\r\n    // constructor for empty object which will be populated via the constructor\r\n    var F = function() {}\r\n        F[prototypeName] = prototype    // set the prototype for created instances\r\n\r\n    var constructorName = prototype.name?prototype.name:''\r\n    if(prototype[init] === undefined || prototype[init] === noop) {\r\n        var ProtoObjectFactory = new Function('F',\r\n            \"return function \" + constructorName + \"(){\" +\r\n                \"return new F()\" +\r\n            \"}\"\r\n        )(F)\r\n    } else {\r\n        // dynamically creating this function cause there's no other way to dynamically name a function\r\n        var ProtoObjectFactory = new Function('F','i','u','n', // shitty variables cause minifiers aren't gonna minify my function string here\r\n            \"return function \" + constructorName + \"(){ \" +\r\n                \"var x=new F(),r=i.apply(x,arguments)\\n\" +    // populate object via the constructor\r\n                \"if(r===n)\\n\" +\r\n                    \"return x\\n\" +\r\n                \"else if(r===u)\\n\" +\r\n                    \"return n\\n\" +\r\n                \"else\\n\" +\r\n                    \"return r\\n\" +\r\n            \"}\"\r\n        )(F, prototype[init], proto[protoUndefined]) // note that n is undefined\r\n    }\r\n\r\n    prototype.constructor = ProtoObjectFactory;    // set the constructor property on the prototype\r\n\r\n    // add all the prototype properties onto the static class as well (so you can access that class when you want to reference superclass properties)\r\n    for(var n in prototype) {\r\n        addProperty(ProtoObjectFactory, prototype, n)\r\n    }\r\n\r\n    // add properties from parent that don't exist in the static class object yet\r\n    for(var n in parent) {\r\n        if(ownProperty.call(parent, n) && ProtoObjectFactory[n] === undefined) {\r\n            addProperty(ProtoObjectFactory, parent, n)\r\n        }\r\n    }\r\n\r\n    ProtoObjectFactory.parent = parent;            // special parent property only available on the returned proto class\r\n    ProtoObjectFactory[prototypeName] = prototype  // set the prototype on the object factory\r\n\r\n    return ProtoObjectFactory;\r\n}\r\n\r\nproto[protoUndefined] = {} // a special marker for when you want to return undefined from a constructor\r\n\r\nmodule.exports = proto\r\n\r\nfunction normalizeErrorObject(ErrorObject, namePointer) {\r\n    function NormalizedError() {\r\n        var tmp = new ErrorObject(arguments[0])\r\n        tmp.name = namePointer.name\r\n\r\n        this.message = tmp.message\r\n        if(Object.defineProperty) {\r\n            /*this.stack = */Object.defineProperty(this, 'stack', { // getter for more optimizy goodness\r\n                get: function() {\r\n                    return tmp.stack\r\n                },\r\n                configurable: true // so you can change it if you want\r\n            })\r\n        } else {\r\n            this.stack = tmp.stack\r\n        }\r\n\r\n        return this\r\n    }\r\n\r\n    var IntermediateInheritor = function() {}\r\n        IntermediateInheritor.prototype = ErrorObject.prototype\r\n    NormalizedError.prototype = new IntermediateInheritor()\r\n\r\n    return NormalizedError\r\n}\r\n\r\nfunction addProperty(factoryObject, prototype, property) {\r\n    try {\r\n        var info = Object.getOwnPropertyDescriptor(prototype, property)\r\n        if(info.get !== undefined || info.get !== undefined && Object.defineProperty !== undefined) {\r\n            Object.defineProperty(factoryObject, property, info)\r\n        } else {\r\n            factoryObject[property] = prototype[property]\r\n        }\r\n    } catch(e) {\r\n        // do nothing, if a property (like `name`) can't be set, just ignore it\r\n    }\r\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/proto/proto.js\n ** module id = 1\n ** module chunks = 0\n **/"],"sourceRoot":"","file":"xolor.umd.js"}